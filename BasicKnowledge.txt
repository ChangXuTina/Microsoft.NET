Test Your Knowledge
1. Describe the problem generics address.
- Generic means not sepecific to a particular data type. 
- In C# we can define generic classes. interfaces and methods without specific data type.

2. How would you create a list of strings, using the generic List class?
- List<string> list = new List<string>();

3. How many generic type parameters does the Dictionary class have?
- Dictionary<TKey, TValue> class has two generic type parameters, Tkey and TValue represent the types of key and values

4. True/False. When a generic class has multiple type parameters, they must all match.
- False. For example, Dictionary<TKey, TValue> can has string type as key and int type as value

5. What method is used to add items to a List object?
- List<T>.Add<T>

6. Name two methods that cause items to be removed from a List.
- List<T>.Remove(T): Boolean, if success return true otherwise false
- List<T>.RemoveAt(int32): void, remove item by index

7. How do you indicate that a class has a generic type parameter?
- public class Example<T> {}

8. True/False. Generic classes can only have one generic type parameter.
- False. Dictionary<TKey, TValue> class has two generic type parameters

9. True/False. Generic type constraints limit what can be used for the generic type.
- True
- public class GenericList<T> where T: string

10. True/False. Constraints let you use the methods of the thing you are constraining to
- True